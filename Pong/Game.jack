class Game {
    field Paddle paddle;
    field Ball ball;
    field Wall wall;
    field int hitScore;

    constructor Game new() {
        let paddle = Paddle.new(505,1,1,250,0); //length,thickness, left, and bottom position, thickness, paddle speed. thk has to be 1 based on how the code runs now
        let ball = Ball.new(10,50,200,1,1); //thickness, startingX, startingY, speedX, speedY
        let wall = Wall.new(10,30); //thickness, startingX
        return this;
    }
    
    method void run() {
        var char key;
        var int dir;
        var int wallY;
        var boolean exit;
        var int paddleX;
        var int paddleY;
        var int paddleLength;
        let exit = false;
        let wallY = wall.getWallY();
        let paddleY = paddle.getPosY();
        let paddleLength = paddle.getLength();

        do Output.printString("PONG START!");
        while (~exit) {
            //waits for keyboard to be pressed
            while (key = 0) {
                let key  = Keyboard.keyPressed();
                do ball.changeDir(wallY,paddle.getPosX(),paddleY,paddleLength); //need to include paddle coordinates
                do ball.move(wallY);
                /*
                if (ball.checkLose() = true) {
                    do Game.printLoseMessage();
                    return;
                }
                */
            }
            //key is pressed
            if (key = 130) {let dir = -1;} //left arrow
            if (key = 132) {let dir = 1;} //right arrow
            if (key = 81) {let exit = true;} //Q

            //waits for keyboard to be released
            while (~(key = 0)) {
                do paddle.move(dir);
                do ball.changeDir(wallY,paddle.getPosX(),paddleY,paddleLength); //need to include paddle coordinates
                do ball.move(wallY);
                /*
                if (ball.checkLose() = true) {
                    do Game.printLoseMessage();
                    return;
                }
                */
                let key  = Keyboard.keyPressed();
            }
        }
        return;
    }

    method void dispose() {
        do paddle.dispose();
        do ball.dispose();
        do wall.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void printLoseMessage() {
        do Output.moveCursor(0,0);
        do Output.printString("YOU LOST!!!!!!!!!");
        return;
    }
}