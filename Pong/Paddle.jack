class Paddle {
    //field declaration
    field int length;
    field int thickness;
    field int posX;
    field int posY;
    field int speed; //may not be used

    //static declaration

    //constructor
    constructor Paddle new(int pLength, int pThickness, int x, int y, int s) {
        let length = pLength;
        let thickness = pThickness;
        let posX = x;
        let posY = y;
        let speed = s;
        do Screen.drawRectangle(posX,posY,posX+length,posY+thickness-1); //x1,y1 (top left), x2,y2 (bottom right)
        return this;
    }

    //dispose
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    //methods (operates on class instances) or functions (static methods)

    method int getPosX() {
        return posX;
    }

    method int getPosY() {
        return posY;
    }
    
    method int getLength() {
        return length;
    }

    //dir =  1 -> move right, dir = -1 -> move left
    method void move(int dir) { //change this to accomodate speed, 1 pixel per loop feels slow
        if ((dir = 1) & ((posX+length+dir) < 512)) {
            do Screen.drawPixel(posX+length+dir,posY);
            do Screen.setColor(false);
            do Screen.drawPixel(posX,posY);
            do Screen.setColor(true);
            let posX = posX + dir;
        }
        if ((dir = -1) & ((posX+dir) > 0)) {
            do Screen.drawPixel(posX+dir,posY);
            do Screen.setColor(false);
            do Screen.drawPixel(posX+length,posY);
            do Screen.setColor(true);
            let posX = posX + dir;
        }  
        return;
    }
}